任务描述
本关任务：编写能对给定n个叶子结点，构建哈夫曼树，给出每个叶子结点对应编码的程序。

相关知识
哈夫曼编码和译码的基本原理
首先要构造一棵哈夫曼树。哈夫曼树的结点结构包括权值，双亲，左右孩子；
假如由n个字符来构造一棵哈夫曼树，则共有结点2n-1个；
在构造前，先初始化，初始化操作是把双亲，左右孩子的下标值都赋为0；然后依次输入每个结点的权值。
第二步是通过n-1次循环，每次先找输入的权值中最小的两个结点，把这两个结点的权值相加赋给一个新结点，
并且这个新结点的左孩子是权值最小的结点，右孩子是权值第二小的结点；鉴于上述找到的结点都是双亲为0的结点，
为了下次能正确寻找到剩下结点中权值最小的两个结点，每次循环要把找的权值最小的两个结点的双亲赋值不为0（i）。
就这样通过n-1循环下、操作，创建了一棵哈夫曼树，其中，前n个结点是叶子（输入的字符结点）后n-1个是度为2的结点。

编码的思想是逆序编码，从叶子结点出发，向上回溯，如果该结点是回溯到上一个结点的左孩子，则在记录编码的数组里存“0”，否则存“1”，注意是倒着存；
直到遇到根结点（结点双亲为0），每一次循环编码到根结点，把编码存在编码表中，然后开始编码下一个字符（叶子）。
译码的思想是循环读入一串哈夫曼序列，读到“0”从根结点的左孩子继续读，
读到“1”从右孩子继续，如果读到一个结点的左孩子和右孩子是否都为0，
如果是说明已经读到了一个叶子（字符），翻译一个字符成功，
把该叶子结点代表的字符存在一个存储翻译字符的数组中，
然后继续从根结点开始读，直到读完这串哈夫曼序列，遇到结束符便退出翻译循环。（译码内容为选做内容）

任务描述
在右侧编辑器中补充代码，编写能对给定n个叶子结点，构建哈夫曼树，给出每个叶子结点对应编码的程序。
测试说明
平台会对你编写的代码进行测试：
测试输入：5 2 7 4 5 19
预期输出：(对哈夫曼树按中序遍历输出对应叶子的哈夫曼编码)
7 00
5 010
2 0110
4 0111
19 1
测试输入数据说明：5代表共5个结点，后面的5个数字代表权值，不一定按顺序输入